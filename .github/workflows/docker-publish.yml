name: Build & publish Docker image (GHCR)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ghcr-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute image name (lowercase)
        id: meta_image
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/$OWNER_LC/app" >> $GITHUB_OUTPUT
          echo "owner=$OWNER_LC"
          echo "repo=${{ github.repository }}"
          echo "image=ghcr.io/$OWNER_LC/app:latest"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (OCI labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.meta_image.outputs.image }}
          tags: |
            type=raw,value=latest
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_started_at }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT_SHA=${{ github.sha }}
            BUILD_TIME=${{ github.run_started_at }}

      - name: Print pushed digest
        run: echo "pushed_digest=${{ steps.build.outputs.digest }} image=${{ steps.meta_image.outputs.image }}"
